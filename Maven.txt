MAVEN BASICS:

MAVEN:


	Maven is a popular open-source build tool developed by the Apache Group that allows you to build, publish, and deploy several projects at the same time for 	easier project management. Developers can use the tool to create and document a lifecycle framework.

	A phase is a stage in the build lifecycle, which is a series of phases that must be completed in a specific order. Maven runs every phase in the sequence up 	to and including the one specified when a phase is specified. For example, if you run the build phase, the following phases are executed:

		1. validate
		2. generate-sources
		3. process-sources
		4. generate-resources 
		5. process-resources
		6. compile

	validate: validate the project is correct and all necessary information is available
	compile: compile the source code of the project
	test: test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
	package: take the compiled code and package it in its distributable format, such as a JAR.
	integration-test: process and deploy the package if necessary into an environment where integration tests can be run
	verify: run any checks to verify the package is valid and meets quality criteria
	install: install the package into the local repository, for use as a dependency in other projects locally
	deploy: done in an integration or release environment, copies the final package to the remote repository for sharing with other developers and projects.
	
	There are two other Maven lifecycles of note beyond the default list above. They are

	clean: cleans up artifacts created by prior builds
	site: generates site documentation for this project
	
REPOSITORIES:

A repository in Maven holds build artifacts and dependencies of varying types.

There are exactly two types of repositories: local and remote

SIX SCOPES:
	1. compile
	2. provided
	3. runtime
	4. test
	5. import
	6. system

This Maven also have a dependancy management and profiles.
